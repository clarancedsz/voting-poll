{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Voting Form\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"true\"\n}, \"Yes\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"false\"\n}, \"No\", -1 /* HOISTED */);\nconst _hoisted_4 = [_hoisted_2, _hoisted_3];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Submit Vote\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Votes:\", -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Voting Choice\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Casted At\")])], -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"Trend Analysis\"), /*#__PURE__*/_createElementVNode(\"canvas\", {\n  id: \"lineChart\"\n}), /*#__PURE__*/_createElementVNode(\"canvas\", {\n  id: \"barGraph\"\n})], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.submitVote && $options.submitVote(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event),\n    placeholder: \"Name\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.name]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.votingChoice = $event),\n    required: \"\"\n  }, [..._hoisted_4], 512 /* NEED_PATCH */), [[_vModelSelect, $data.votingChoice]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"datetime-local\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.castedAt = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.castedAt]]), _hoisted_5], 32 /* NEED_HYDRATION */), $data.votes.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"table\", null, [_hoisted_8, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.votes, (vote, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(vote.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(vote.voting_choice), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(vote.casted_at), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true), _hoisted_9]);\n}","map":{"version":3,"names":["_createElementVNode","value","_hoisted_2","_hoisted_3","type","key","id","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","submitVote","$event","$data","name","placeholder","required","votingChoice","_hoisted_4","castedAt","_hoisted_5","votes","length","_hoisted_6","_hoisted_7","_hoisted_8","_Fragment","_renderList","vote","index","_toDisplayString","voting_choice","casted_at","_createCommentVNode","_hoisted_9"],"sources":["F:\\taghash\\frontend\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Voting Form</h1>\n    <form @submit.prevent=\"submitVote\">\n      <input type=\"text\" v-model=\"name\" placeholder=\"Name\" required>\n      <select v-model=\"votingChoice\" required>\n        <option value=\"true\">Yes</option>\n        <option value=\"false\">No</option>\n      </select>\n      <input type=\"datetime-local\" v-model=\"castedAt\" required>\n      <button type=\"submit\">Submit Vote</button>\n    </form>\n    \n    <div v-if=\"votes.length\">\n      <h2>Votes:</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Voting Choice</th>\n            <th>Casted At</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(vote, index) in votes\" :key=\"index\">\n            <td>{{ vote.name }}</td>\n            <td>{{ vote.voting_choice }}</td>\n            <td>{{ vote.casted_at }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    \n    <div>\n      <h2>Trend Analysis</h2>\n      <canvas id=\"lineChart\"></canvas>\n      <canvas id=\"barGraph\"></canvas>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\n\nexport default {\n  data() {\n    return {\n      name: '',\n      votingChoice: '',\n      castedAt: '',\n      votes: []\n    };\n  },\n  methods: {\n    submitVote() {\n      axios.post('http://localhost:5000/vote', {\n        name: this.name,\n        voting_choice: this.votingChoice,\n        casted_at: this.castedAt\n      }).then(response => {\n        console.log(response.data);\n        // Reset form fields after successful submission\n        this.name = '';\n        this.votingChoice = '';\n        this.castedAt = '';\n        // Fetch the updated list of votes\n        this.fetchVotes();\n      }).catch(error => {\n        console.error('Error submitting vote:', error);\n      });\n    },\n    fetchVotes() {\n      axios.get('http://localhost:5000/data')\n        .then(response => {\n          this.votes = response.data.data;\n          this.renderLineChart();\n          this.renderBarGraph();\n        }).catch(error => {\n          console.error('Error fetching votes:', error);\n        });\n    },\n    renderLineChart() {\n      const ctx = document.getElementById('lineChart').getContext('2d');\n      const labels = this.votes.map(vote => vote.casted_at);\n      const data = {\n        labels: labels,\n        datasets: [{\n          label: 'Yes',\n          data: this.votes.filter(vote => vote.voting_choice === 'true').map(vote => vote.casted_at),\n          borderColor: 'blue',\n          fill: false\n        }, {\n          label: 'No',\n          data: this.votes.filter(vote => vote.voting_choice === 'false').map(vote => vote.casted_at),\n          borderColor: 'red',\n          fill: false\n        }]\n      };\n      new Chart(ctx, {\n        type: 'line',\n        data: data\n      });\n    },\n    renderBarGraph() {\n      const ctx = document.getElementById('barGraph').getContext('2d');\n      const counts = this.votes.reduce((acc, vote) => {\n        if (vote.voting_choice === 'true') {\n          acc['yes'] = (acc['yes'] || 0) + 1;\n        } else {\n          acc['no'] = (acc['no'] || 0) + 1;\n        }\n        return acc;\n      }, {});\n      const data = {\n        labels: ['Yes', 'No'],\n        datasets: [{\n          label: 'Votes',\n          data: [counts['yes'] || 0, counts['no'] || 0],\n          backgroundColor: ['blue', 'red']\n        }]\n      };\n      new Chart(ctx, {\n        type: 'bar',\n        data: data\n      });\n    }\n  },\n  created() {\n    // Fetch the list of votes when the component is created\n    this.fetchVotes();\n  }\n};\n</script>\n\n<style>\n/* Add your CSS styles here */\n</style>\n"],"mappings":";gCAEIA,mBAAA,CAAoB,YAAhB,aAAW;gCAIXA,mBAAA,CAAiC;EAAzBC,KAAK,EAAC;AAAM,GAAC,KAAG;gCACxBD,mBAAA,CAAiC;EAAzBC,KAAK,EAAC;AAAO,GAAC,IAAE;oBADxBC,UAAiC,EACjCC,UAAiC,C;gCAGnCH,mBAAA,CAA0C;EAAlCI,IAAI,EAAC;AAAQ,GAAC,aAAW;;EAVvCC,GAAA;AAAA;gCAcML,mBAAA,CAAe,YAAX,QAAM;gCAERA,mBAAA,CAMQ,gB,aALNA,mBAAA,CAIK,a,aAHHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAsB,YAAlB,eAAa,G,aACjBA,mBAAA,CAAkB,YAAd,WAAS,E;gCAarBA,mBAAA,CAIM,c,aAHJA,mBAAA,CAAuB,YAAnB,gBAAc,G,aAClBA,mBAAA,CAAgC;EAAxBM,EAAE,EAAC;AAAW,I,aACtBN,mBAAA,CAA+B;EAAvBM,EAAE,EAAC;AAAU,G;;uBAnCzBC,mBAAA,CAqCM,cApCJC,UAAoB,EACpBR,mBAAA,CAQO;IARAS,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;sBAC/BZ,mBAAA,CAA8D;IAAvDI,IAAI,EAAC,MAAM;IAJxB,uBAAAM,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAIkCC,KAAA,CAAAC,IAAI,GAAAF,MAAA;IAAEG,WAAW,EAAC,MAAM;IAACC,QAAQ,EAAR;iDAAzBH,KAAA,CAAAC,IAAI,E,mBAChCjB,mBAAA,CAGS;IARf,uBAAAU,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAKuBC,KAAA,CAAAI,YAAY,GAAAL,MAAA;IAAEI,QAAQ,EAAR;KALrC,IAAAE,UAAA,2B,gBAKuBL,KAAA,CAAAI,YAAY,E,mBAI7BpB,mBAAA,CAAyD;IAAlDI,IAAI,EAAC,gBAAgB;IATlC,uBAAAM,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAS4CC,KAAA,CAAAM,QAAQ,GAAAP,MAAA;IAAEI,QAAQ,EAAR;iDAAVH,KAAA,CAAAM,QAAQ,E,GAC9CC,UAA0C,C,4BAGjCP,KAAA,CAAAQ,KAAK,CAACC,MAAM,I,cAAvBlB,mBAAA,CAkBM,OA/BVmB,UAAA,GAcMC,UAAe,EACf3B,mBAAA,CAeQ,gBAdN4B,UAMQ,EACR5B,mBAAA,CAMQ,iB,kBALNO,mBAAA,CAIKsB,SAAA,QA5BfC,WAAA,CAwBsCd,KAAA,CAAAQ,KAAK,EAxB3C,CAwBsBO,IAAI,EAAEC,KAAK;yBAAvBzB,mBAAA,CAIK;MAJ+BF,GAAG,EAAE2B;IAAK,IAC5ChC,mBAAA,CAAwB,YAAAiC,gBAAA,CAAjBF,IAAI,CAACd,IAAI,kBAChBjB,mBAAA,CAAiC,YAAAiC,gBAAA,CAA1BF,IAAI,CAACG,aAAa,kBACzBlC,mBAAA,CAA6B,YAAAiC,gBAAA,CAAtBF,IAAI,CAACI,SAAS,iB;0CA3BjCC,mBAAA,gBAiCIC,UAIM,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}